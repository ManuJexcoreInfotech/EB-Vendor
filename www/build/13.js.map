{"version":3,"sources":["../../src/pages/account/forgotten/forgotten.module.ts","../../src/pages/account/forgotten/forgotten.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AACO;AActD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAZlC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAgB,CAAC;gBAC1C,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,oEAAgB;aACjB;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACjBO;AACI;AACe;AACI;AACN;AAQ3D;IAWI,0BAAmB,GAAkB,EAAS,OAAgB,EAAS,SAAoB,EAAS,MAAc;QAAlH,iBAMC;QANkB,QAAG,GAAH,GAAG,CAAe;QAAS,YAAO,GAAP,OAAO,CAAS;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,WAAM,GAAN,MAAM,CAAQ;QAD3G,kBAAa,GAAY,KAAK,CAAC;QAElC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;aAC5B,IAAI,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACtD,CAAC;IACD,oCAAS,GAAT,UAAU,KAAK;QAAf,iBAOC;QANG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;iBAClD,IAAI,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IACD,uCAAY,GAAZ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAC1E,MAAM,CAAC,KAAK;QAChB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI;QACf,CAAC;IACL,CAAC;IACD,sCAAW,GAAX,UAAY,OAAO;QACf,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IAC3B,CAAC;IACD,uCAAY,GAAZ,UAAa,OAAO,EAAE,KAAK;QACvB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,uEAAuE,GAAG,KAAK,CAAC,CAAC;QACrH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IA3CQ,gBAAgB;QAH5B,wEAAS,CAAC;WACsB;SAChC,CAAC;yBAYoH;OAXzG,gBAAgB,CA4C5B;IAAD,CAAC;AAAA;SA5CY,gBAAgB,Y","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AccountForgotten } from './forgotten';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    AccountForgotten,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountForgotten),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    AccountForgotten\n  ]\n})\nexport class AccountForgottenModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/forgotten/forgotten.module.ts","import { Component } from '@angular/core';\nimport { NavController, IonicPage } from 'ionic-angular';\nimport { Service } from '../../../providers/service/service';\nimport { Functions } from '../../../providers/service/functions';\nimport { Values } from '../../../providers/service/values';\n\n\n\n@IonicPage()\n@Component({\n    templateUrl: 'forgotten.html'\n})\nexport class AccountForgotten {\n    href: any;\n    loadForgotten: any;\n    forgottenData: any;\n    errorMessage: any;\n    status: any;\n    login: any;\n    nonce: any;\n    url: any;\n    Reset: any;\n    public disableSubmit: boolean = false;\n    constructor(public nav: NavController, public service: Service, public functions: Functions, public values: Values) {\n        this.Reset = \"Reset\";\n        this.loadForgotten = null;\n        this.forgottenData = [];\n        this.service.passwordResetNonce()\n            .then((results) => this.handleNonce(results));\n    }\n    forgotten(email) {\n        if (this.validateForm()) {\n            this.Reset = \"Resetting\";\n            this.disableSubmit = true;\n            this.service.passwordreset(email, this.nonce, this.url)\n                .then((results) => this.handleResult(results, email));\n        }\n    }\n    validateForm() {\n        if (this.forgottenData.email == undefined || this.forgottenData.email == \"\") {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n    handleNonce(results) {\n        this.nonce = results.nonce;\n        this.url = results.url;\n    }\n    handleResult(results, email) {\n        this.Reset = \"Reset\";\n        this.disableSubmit = false;\n        this.functions.showAlert(\"SUCCESS\", \"An email with password reset link has been sent to your mail address \" + email);\n        this.nav.setRoot('AccountLogin');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/forgotten/forgotten.ts"],"sourceRoot":""}